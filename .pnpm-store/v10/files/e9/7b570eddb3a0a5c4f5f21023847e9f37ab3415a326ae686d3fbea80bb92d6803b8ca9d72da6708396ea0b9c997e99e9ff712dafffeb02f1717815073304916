import { JSONSerializable } from '../../../util/json';
import { AccAddress } from '../../bech32';
import { Any } from '@initia/initia.proto/google/protobuf/any';
import { MsgCreateDenom as MsgCreateDenom_pb } from '@initia/initia.proto/miniwasm/tokenfactory/v1/tx';
export declare class MsgCreateDenom extends JSONSerializable<MsgCreateDenom.Amino, MsgCreateDenom.Data, MsgCreateDenom.Proto> {
    sender: AccAddress;
    subdenom: string;
    constructor(sender: AccAddress, subdenom: string);
    static fromAmino(data: MsgCreateDenom.Amino): MsgCreateDenom;
    toAmino(): MsgCreateDenom.Amino;
    static fromData(data: MsgCreateDenom.Data): MsgCreateDenom;
    toData(): MsgCreateDenom.Data;
    static fromProto(data: MsgCreateDenom.Proto): MsgCreateDenom;
    toProto(): MsgCreateDenom.Proto;
    packAny(): Any;
    static unpackAny(msgAny: Any): MsgCreateDenom;
}
export declare namespace MsgCreateDenom {
    interface Amino {
        type: 'tokenfactory/MsgCreateDenom';
        value: {
            sender: AccAddress;
            subdenom: string;
        };
    }
    interface Data {
        '@type': '/miniwasm.tokenfactory.v1.MsgCreateDenom';
        sender: AccAddress;
        subdenom: string;
    }
    type Proto = MsgCreateDenom_pb;
}
