import { JSONSerializable } from '../../util/json';
import { AccAddress } from '../bech32';
import { GroupMember as GroupMember_pb, Member as Member_pb, MemberRequest as MemberRequest_pb } from '@initia/initia.proto/cosmos/group/v1/types';
export declare class GroupMember extends JSONSerializable<GroupMember.Amino, GroupMember.Data, GroupMember.Proto> {
    group_id: number;
    member: Member;
    constructor(group_id: number, member: Member);
    static fromAmino(data: GroupMember.Amino): GroupMember;
    toAmino(): GroupMember.Amino;
    static fromData(data: GroupMember.Data): GroupMember;
    toData(): GroupMember.Data;
    static fromProto(data: GroupMember.Proto): GroupMember;
    toProto(): GroupMember.Proto;
}
export declare namespace GroupMember {
    interface Amino {
        group_id: string;
        member: Member.Amino;
    }
    interface Data {
        group_id: string;
        member: Member.Data;
    }
    type Proto = GroupMember_pb;
}
export declare class Member extends JSONSerializable<Member.Amino, Member.Data, Member.Proto> {
    address: AccAddress;
    weight: string;
    metadata: string;
    added_at: Date;
    constructor(address: AccAddress, weight: string, metadata: string, added_at: Date);
    static fromAmino(data: Member.Amino): Member;
    toAmino(): Member.Amino;
    static fromData(data: Member.Data): Member;
    toData(): Member.Data;
    static fromProto(data: Member.Proto): Member;
    toProto(): Member.Proto;
}
export declare namespace Member {
    interface Amino {
        address: AccAddress;
        weight: string;
        metadata: string;
        added_at: string;
    }
    interface Data {
        address: AccAddress;
        weight: string;
        metadata: string;
        added_at: string;
    }
    type Proto = Member_pb;
}
export declare class MemberRequest extends JSONSerializable<MemberRequest.Amino, MemberRequest.Data, MemberRequest.Proto> {
    address: AccAddress;
    weight: string;
    metadata: string;
    constructor(address: AccAddress, weight: string, metadata: string);
    static fromAmino(data: MemberRequest.Amino): MemberRequest;
    toAmino(): MemberRequest.Amino;
    static fromData(data: MemberRequest.Data): MemberRequest;
    toData(): MemberRequest.Data;
    static fromProto(data: MemberRequest.Proto): MemberRequest;
    toProto(): MemberRequest.Proto;
}
export declare namespace MemberRequest {
    interface Amino {
        address: AccAddress;
        weight: string;
        metadata: string;
    }
    interface Data {
        address: AccAddress;
        weight: string;
        metadata: string;
    }
    type Proto = MemberRequest_pb;
}
