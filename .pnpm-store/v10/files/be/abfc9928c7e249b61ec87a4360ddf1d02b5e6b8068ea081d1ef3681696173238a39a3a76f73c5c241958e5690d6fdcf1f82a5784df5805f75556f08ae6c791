import { JSONSerializable } from '../../../util/json';
import { AccAddress } from '../../bech32';
import { Any } from '@initia/initia.proto/google/protobuf/any';
import { MsgRegisterAccount as MsgRegisterAccount_pb } from '@initia/initia.proto/noble/forwarding/v1/tx';
export declare class MsgRegisterForwardingAccount extends JSONSerializable<MsgRegisterForwardingAccount.Amino, MsgRegisterForwardingAccount.Data, MsgRegisterForwardingAccount.Proto> {
    signer: AccAddress;
    recipient: string;
    channel: string;
    constructor(signer: AccAddress, recipient: string, channel: string);
    static fromAmino(data: MsgRegisterForwardingAccount.Amino): MsgRegisterForwardingAccount;
    toAmino(): MsgRegisterForwardingAccount.Amino;
    static fromData(data: MsgRegisterForwardingAccount.Data): MsgRegisterForwardingAccount;
    toData(): MsgRegisterForwardingAccount.Data;
    static fromProto(data: MsgRegisterForwardingAccount.Proto): MsgRegisterForwardingAccount;
    toProto(): MsgRegisterForwardingAccount.Proto;
    packAny(): Any;
    static unpackAny(msgAny: Any): MsgRegisterForwardingAccount;
}
export declare namespace MsgRegisterForwardingAccount {
    interface Amino {
        type: 'noble/forwarding/RegisterAccount';
        value: {
            signer: AccAddress;
            recipient: string;
            channel: string;
        };
    }
    interface Data {
        '@type': '/noble.forwarding.v1.MsgRegisterAccount';
        signer: AccAddress;
        recipient: string;
        channel: string;
    }
    type Proto = MsgRegisterAccount_pb;
}
