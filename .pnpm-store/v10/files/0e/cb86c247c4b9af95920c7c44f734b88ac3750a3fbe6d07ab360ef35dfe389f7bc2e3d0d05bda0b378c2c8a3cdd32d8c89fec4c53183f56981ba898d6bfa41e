import { JSONSerializable } from '../../../util/json';
import { AccAddress } from '../../bech32';
import { Any } from '@initia/initia.proto/google/protobuf/any';
import { MsgVote as MsgVote_pb } from '@initia/initia.proto/cosmos/gov/v1/tx';
import { VoteOption } from '@initia/initia.proto/cosmos/gov/v1/gov';
export declare class MsgVote extends JSONSerializable<MsgVote.Amino, MsgVote.Data, MsgVote.Proto> {
    proposal_id: number;
    voter: AccAddress;
    option: VoteOption;
    metadata: string;
    constructor(proposal_id: number, voter: AccAddress, option: VoteOption, metadata: string);
    static fromAmino(data: MsgVote.Amino): MsgVote;
    toAmino(): MsgVote.Amino;
    static fromData(data: MsgVote.Data): MsgVote;
    toData(): MsgVote.Data;
    static fromProto(data: MsgVote.Proto): MsgVote;
    toProto(): MsgVote.Proto;
    packAny(): Any;
    static unpackAny(msgAny: Any): MsgVote;
}
export declare namespace MsgVote {
    const Option: typeof VoteOption;
    type Option = VoteOption;
    interface Amino {
        type: 'cosmos-sdk/v1/MsgVote';
        value: {
            proposal_id: string;
            voter: AccAddress;
            option: VoteOption;
            metadata?: string;
        };
    }
    interface Data {
        '@type': '/cosmos.gov.v1.MsgVote';
        proposal_id: string;
        voter: AccAddress;
        option: Option;
        metadata: string;
    }
    type Proto = MsgVote_pb;
}
