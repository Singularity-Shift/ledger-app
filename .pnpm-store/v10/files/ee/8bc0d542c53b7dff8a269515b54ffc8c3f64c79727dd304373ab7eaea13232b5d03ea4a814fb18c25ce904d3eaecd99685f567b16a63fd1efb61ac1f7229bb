import { Options } from 'ky';
interface Pagination {
    next_key: string | null;
    total: string;
}
export type Paginated<K extends string, T> = {
    pagination: Pagination;
} & {
    [P in K]: T[];
};
export declare function getNextPageParam<K extends string, T>(data: Paginated<K, T>): string | null;
export declare function fetchAllPages<K extends string, T>(url: string, options: Options, key: K): Promise<T[]>;
export declare function parsePaginatedResponse<K extends string, T>(key: K, data?: {
    pages: Array<Paginated<K, T>>;
}): {
    list: T[];
    count: number;
};
export {};
