import { AccAddress, EvmParams } from '../../../core';
import { APIParams } from '../APIRequester';
import { BaseAPI } from './BaseAPI';
export interface CallResponse {
    response: string;
    used_gas: string;
    logs: {
        address: AccAddress;
        topics: string[];
        data: string;
    }[];
    trace_output: string;
}
export declare class EvmAPI extends BaseAPI {
    code(contract_addr: AccAddress, params?: APIParams, headers?: Record<string, string>): Promise<string>;
    state(contract_addr: AccAddress, key: string, params?: APIParams, headers?: Record<string, string>): Promise<string>;
    erc20Factory(params?: APIParams, headers?: Record<string, string>): Promise<string>;
    erc20Wrapper(params?: APIParams, headers?: Record<string, string>): Promise<string>;
    contractAddrByDenom(denom: string, params?: APIParams, headers?: Record<string, string>): Promise<AccAddress>;
    denom(contract_addr: AccAddress, params?: APIParams, headers?: Record<string, string>): Promise<string>;
    call(sender: AccAddress, contract_addr: AccAddress, input: string, with_trace: boolean, headers?: Record<string, string>): Promise<CallResponse>;
    parameters(params?: APIParams, headers?: Record<string, string>): Promise<EvmParams>;
}
