import { JSONSerializable } from '../../util/json';
import { RewardWeight } from './RewardWeight';
import { Params as Params_pb } from '@initia/initia.proto/initia/distribution/v1/distribution';
export declare class DistributionParams extends JSONSerializable<DistributionParams.Amino, DistributionParams.Data, DistributionParams.Proto> {
    community_tax: string;
    withdraw_addr_enabled: boolean;
    reward_weights: RewardWeight[];
    constructor(community_tax: string, withdraw_addr_enabled: boolean, reward_weights: RewardWeight[]);
    static fromAmino(data: DistributionParams.Amino): DistributionParams;
    toAmino(): DistributionParams.Amino;
    static fromData(data: DistributionParams.Data): DistributionParams;
    toData(): DistributionParams.Data;
    static fromProto(data: DistributionParams.Proto): DistributionParams;
    toProto(): DistributionParams.Proto;
}
export declare namespace DistributionParams {
    interface Amino {
        type: 'distribution/Params';
        value: {
            community_tax: string;
            withdraw_addr_enabled: boolean;
            reward_weights: RewardWeight.Amino[];
        };
    }
    interface Data {
        '@type': '/initia.distribution.v1.Params';
        community_tax: string;
        withdraw_addr_enabled: boolean;
        reward_weights: RewardWeight.Data[];
    }
    type Proto = Params_pb;
}
