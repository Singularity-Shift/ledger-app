"use strict";
// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v1.181.1
//   protoc               v5.27.1
// source: noble/forwarding/v1/packet.proto
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.RegisterAccountMemo_RegisterAccountDataWrapper = exports.RegisterAccountMemo = exports.RegisterAccountData = exports.protobufPackage = void 0;
/* eslint-disable */
const minimal_1 = __importDefault(require("protobufjs/minimal"));
exports.protobufPackage = "noble.forwarding.v1";
function createBaseRegisterAccountData() {
    return { recipient: "", channel: "", fallback: "" };
}
exports.RegisterAccountData = {
    encode(message, writer = minimal_1.default.Writer.create()) {
        if (message.recipient !== "") {
            writer.uint32(10).string(message.recipient);
        }
        if (message.channel !== "") {
            writer.uint32(18).string(message.channel);
        }
        if (message.fallback !== "") {
            writer.uint32(26).string(message.fallback);
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof minimal_1.default.Reader ? input : minimal_1.default.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseRegisterAccountData();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.recipient = reader.string();
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.channel = reader.string();
                    continue;
                case 3:
                    if (tag !== 26) {
                        break;
                    }
                    message.fallback = reader.string();
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON(object) {
        return {
            recipient: isSet(object.recipient) ? gt.String(object.recipient) : "",
            channel: isSet(object.channel) ? gt.String(object.channel) : "",
            fallback: isSet(object.fallback) ? gt.String(object.fallback) : "",
        };
    },
    toJSON(message) {
        const obj = {};
        if (message.recipient !== "") {
            obj.recipient = message.recipient;
        }
        if (message.channel !== "") {
            obj.channel = message.channel;
        }
        if (message.fallback !== "") {
            obj.fallback = message.fallback;
        }
        return obj;
    },
    create(base) {
        return exports.RegisterAccountData.fromPartial(base ?? {});
    },
    fromPartial(object) {
        const message = createBaseRegisterAccountData();
        message.recipient = object.recipient ?? "";
        message.channel = object.channel ?? "";
        message.fallback = object.fallback ?? "";
        return message;
    },
};
function createBaseRegisterAccountMemo() {
    return { noble: undefined };
}
exports.RegisterAccountMemo = {
    encode(message, writer = minimal_1.default.Writer.create()) {
        if (message.noble !== undefined) {
            exports.RegisterAccountMemo_RegisterAccountDataWrapper.encode(message.noble, writer.uint32(10).fork()).ldelim();
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof minimal_1.default.Reader ? input : minimal_1.default.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseRegisterAccountMemo();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.noble = exports.RegisterAccountMemo_RegisterAccountDataWrapper.decode(reader, reader.uint32());
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON(object) {
        return {
            noble: isSet(object.noble)
                ? exports.RegisterAccountMemo_RegisterAccountDataWrapper.fromJSON(object.noble)
                : undefined,
        };
    },
    toJSON(message) {
        const obj = {};
        if (message.noble !== undefined) {
            obj.noble = exports.RegisterAccountMemo_RegisterAccountDataWrapper.toJSON(message.noble);
        }
        return obj;
    },
    create(base) {
        return exports.RegisterAccountMemo.fromPartial(base ?? {});
    },
    fromPartial(object) {
        const message = createBaseRegisterAccountMemo();
        message.noble =
            object.noble !== undefined && object.noble !== null
                ? exports.RegisterAccountMemo_RegisterAccountDataWrapper.fromPartial(object.noble)
                : undefined;
        return message;
    },
};
function createBaseRegisterAccountMemo_RegisterAccountDataWrapper() {
    return { forwarding: undefined };
}
exports.RegisterAccountMemo_RegisterAccountDataWrapper = {
    encode(message, writer = minimal_1.default.Writer.create()) {
        if (message.forwarding !== undefined) {
            exports.RegisterAccountData.encode(message.forwarding, writer.uint32(10).fork()).ldelim();
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof minimal_1.default.Reader ? input : minimal_1.default.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseRegisterAccountMemo_RegisterAccountDataWrapper();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.forwarding = exports.RegisterAccountData.decode(reader, reader.uint32());
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON(object) {
        return {
            forwarding: isSet(object.forwarding) ? exports.RegisterAccountData.fromJSON(object.forwarding) : undefined,
        };
    },
    toJSON(message) {
        const obj = {};
        if (message.forwarding !== undefined) {
            obj.forwarding = exports.RegisterAccountData.toJSON(message.forwarding);
        }
        return obj;
    },
    create(base) {
        return exports.RegisterAccountMemo_RegisterAccountDataWrapper.fromPartial(base ?? {});
    },
    fromPartial(object) {
        const message = createBaseRegisterAccountMemo_RegisterAccountDataWrapper();
        message.forwarding =
            object.forwarding !== undefined && object.forwarding !== null
                ? exports.RegisterAccountData.fromPartial(object.forwarding)
                : undefined;
        return message;
    },
};
const gt = (() => {
    if (typeof globalThis !== "undefined") {
        return globalThis;
    }
    if (typeof self !== "undefined") {
        return self;
    }
    if (typeof window !== "undefined") {
        return window;
    }
    if (typeof global !== "undefined") {
        return global;
    }
    throw "Unable to locate global object";
})();
function isSet(value) {
    return value !== null && value !== undefined;
}
//# sourceMappingURL=packet.js.map