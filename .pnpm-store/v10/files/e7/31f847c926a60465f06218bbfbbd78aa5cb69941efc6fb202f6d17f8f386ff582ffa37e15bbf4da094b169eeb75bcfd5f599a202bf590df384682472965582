import { JSONSerializable } from '../../../util/json';
import { AccAddress } from '../../bech32';
import { DenomMetadata } from '../../bank/DenomMetadata';
import { Any } from '@initia/initia.proto/google/protobuf/any';
import { MsgSetDenomMetadata as MsgSetDenomMetadata_pb } from '@initia/initia.proto/miniwasm/tokenfactory/v1/tx';
export declare class MsgSetDenomMetadataWasm extends JSONSerializable<MsgSetDenomMetadataWasm.Amino, MsgSetDenomMetadataWasm.Data, MsgSetDenomMetadataWasm.Proto> {
    sender: AccAddress;
    metadata: DenomMetadata;
    constructor(sender: AccAddress, metadata: DenomMetadata);
    static fromAmino(data: MsgSetDenomMetadataWasm.Amino): MsgSetDenomMetadataWasm;
    toAmino(): MsgSetDenomMetadataWasm.Amino;
    static fromData(data: MsgSetDenomMetadataWasm.Data): MsgSetDenomMetadataWasm;
    toData(): MsgSetDenomMetadataWasm.Data;
    static fromProto(data: MsgSetDenomMetadataWasm.Proto): MsgSetDenomMetadataWasm;
    toProto(): MsgSetDenomMetadataWasm.Proto;
    packAny(): Any;
    static unpackAny(msgAny: Any): MsgSetDenomMetadataWasm;
}
export declare namespace MsgSetDenomMetadataWasm {
    interface Amino {
        type: 'tokenfactory/MsgSetDenomMetadata';
        value: {
            sender: AccAddress;
            metadata: DenomMetadata.Amino;
        };
    }
    interface Data {
        '@type': '/miniwasm.tokenfactory.v1.MsgSetDenomMetadata';
        sender: AccAddress;
        metadata: DenomMetadata.Data;
    }
    type Proto = MsgSetDenomMetadata_pb;
}
