import { JSONSerializable } from '../../util/json';
import { Duration } from '../Duration';
import { Params as Params_pb } from '@initia/initia.proto/initia/reward/v1/types';
export declare class RewardParams extends JSONSerializable<RewardParams.Amino, RewardParams.Data, RewardParams.Proto> {
    reward_denom: string;
    dilution_period: Duration;
    release_rate: string;
    dilution_rate: string;
    release_enabled: boolean;
    constructor(reward_denom: string, dilution_period: Duration, release_rate: string, dilution_rate: string, release_enabled: boolean);
    static fromAmino(data: RewardParams.Amino): RewardParams;
    toAmino(): RewardParams.Amino;
    static fromData(data: RewardParams.Data): RewardParams;
    toData(): RewardParams.Data;
    static fromProto(data: RewardParams.Proto): RewardParams;
    toProto(): RewardParams.Proto;
}
export declare namespace RewardParams {
    interface Amino {
        type: 'reward/Params';
        value: {
            reward_denom: string;
            dilution_period: Duration.Amino;
            release_rate: string;
            dilution_rate: string;
            release_enabled: boolean;
        };
    }
    interface Data {
        '@type': '/initia.reward.v1.Params';
        reward_denom: string;
        dilution_period: Duration.Data;
        release_rate: string;
        dilution_rate: string;
        release_enabled: boolean;
    }
    type Proto = Params_pb;
}
