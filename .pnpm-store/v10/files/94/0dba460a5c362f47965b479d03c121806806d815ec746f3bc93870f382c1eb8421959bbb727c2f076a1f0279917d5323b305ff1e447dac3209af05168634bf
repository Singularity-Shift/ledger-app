import _m0 from "protobufjs/minimal";
export declare const protobufPackage = "initia.ibchooks.v1";
/** Params defines the set of hook parameters. */
export interface Params {
    /**
     * if the ACL of a address is not set,
     * then we use this value to decide the ACL.
     */
    defaultAllowed: boolean;
}
/** ACL defines the ACL entry of an address. */
export interface ACL {
    address: string;
    allowed: boolean;
}
export declare const Params: {
    encode(message: Params, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): Params;
    fromJSON(object: any): Params;
    toJSON(message: Params): unknown;
    create(base?: DeepPartial<Params>): Params;
    fromPartial(object: DeepPartial<Params>): Params;
};
export declare const ACL: {
    encode(message: ACL, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): ACL;
    fromJSON(object: any): ACL;
    toJSON(message: ACL): unknown;
    create(base?: DeepPartial<ACL>): ACL;
    fromPartial(object: DeepPartial<ACL>): ACL;
};
type Builtin = Date | Function | Uint8Array | string | number | boolean | bigint | undefined;
export type DeepPartial<T> = T extends Builtin ? T : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>> : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>> : T extends {} ? {
    [K in keyof T]?: DeepPartial<T[K]>;
} : Partial<T>;
export {};
