import { JSONSerializable } from '../../../util/json';
import { AccAddress } from '../../bech32';
import { Any } from '@initia/initia.proto/google/protobuf/any';
import { MsgGovPublish as MsgGovPublish_pb } from '@initia/initia.proto/initia/move/v1/tx';
import { UpgradePolicy } from '@initia/initia.proto/initia/move/v1/types';
export declare class MsgGovPublish extends JSONSerializable<MsgGovPublish.Amino, MsgGovPublish.Data, MsgGovPublish.Proto> {
    authority: AccAddress;
    sender: AccAddress;
    code_bytes: string[];
    upgrade_policy: MsgGovPublish.Policy;
    constructor(authority: AccAddress, sender: AccAddress, code_bytes: string[], upgrade_policy: MsgGovPublish.Policy);
    static fromAmino(data: MsgGovPublish.Amino): MsgGovPublish;
    toAmino(): MsgGovPublish.Amino;
    static fromData(data: MsgGovPublish.Data): MsgGovPublish;
    toData(): MsgGovPublish.Data;
    static fromProto(proto: MsgGovPublish.Proto): MsgGovPublish;
    toProto(): MsgGovPublish.Proto;
    packAny(): Any;
    static unpackAny(msgAny: Any): MsgGovPublish;
}
export declare namespace MsgGovPublish {
    type Policy = UpgradePolicy;
    const Policy: typeof UpgradePolicy;
    interface Amino {
        type: 'move/MsgGovPublish';
        value: {
            authority: AccAddress;
            sender: AccAddress;
            code_bytes: string[];
            upgrade_policy?: UpgradePolicy;
        };
    }
    interface Data {
        '@type': '/initia.move.v1.MsgGovPublish';
        authority: AccAddress;
        sender: AccAddress;
        code_bytes: string[];
        upgrade_policy: UpgradePolicy;
    }
    type Proto = MsgGovPublish_pb;
}
