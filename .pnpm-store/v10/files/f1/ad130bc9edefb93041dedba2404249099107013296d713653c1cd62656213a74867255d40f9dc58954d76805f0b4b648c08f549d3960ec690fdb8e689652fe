import _m0 from "protobufjs/minimal";
import { BaseAccount } from "../../../cosmos/auth/v1beta1/auth";
export declare const protobufPackage = "initia.move.v1";
/** ObjectAccount defines an account for objects that holds coins without pubkey. */
export interface ObjectAccount {
    baseAccount?: BaseAccount | undefined;
}
/** TableAccount defines an account for tables that holds items without pubkey. */
export interface TableAccount {
    baseAccount?: BaseAccount | undefined;
}
export declare const ObjectAccount: {
    encode(message: ObjectAccount, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): ObjectAccount;
    fromJSON(object: any): ObjectAccount;
    toJSON(message: ObjectAccount): unknown;
    create(base?: DeepPartial<ObjectAccount>): ObjectAccount;
    fromPartial(object: DeepPartial<ObjectAccount>): ObjectAccount;
};
export declare const TableAccount: {
    encode(message: TableAccount, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): TableAccount;
    fromJSON(object: any): TableAccount;
    toJSON(message: TableAccount): unknown;
    create(base?: DeepPartial<TableAccount>): TableAccount;
    fromPartial(object: DeepPartial<TableAccount>): TableAccount;
};
type Builtin = Date | Function | Uint8Array | string | number | boolean | bigint | undefined;
export type DeepPartial<T> = T extends Builtin ? T : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>> : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>> : T extends {} ? {
    [K in keyof T]?: DeepPartial<T[K]>;
} : Partial<T>;
export {};
