"use strict";
// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v1.181.1
//   protoc               v5.27.1
// source: connect/marketmap/v2/genesis.proto
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.GenesisState = exports.protobufPackage = void 0;
/* eslint-disable */
const long_1 = __importDefault(require("long"));
const minimal_1 = __importDefault(require("protobufjs/minimal"));
const market_1 = require("./market");
const params_1 = require("./params");
exports.protobufPackage = "connect.marketmap.v2";
function createBaseGenesisState() {
    return { marketMap: undefined, lastUpdated: 0n, params: undefined };
}
exports.GenesisState = {
    encode(message, writer = minimal_1.default.Writer.create()) {
        if (message.marketMap !== undefined) {
            market_1.MarketMap.encode(message.marketMap, writer.uint32(10).fork()).ldelim();
        }
        if (message.lastUpdated !== 0n) {
            if (BigInt.asUintN(64, message.lastUpdated) !== message.lastUpdated) {
                throw new gt.Error("value provided for field message.lastUpdated of type uint64 too large");
            }
            writer.uint32(16).uint64(message.lastUpdated.toString());
        }
        if (message.params !== undefined) {
            params_1.Params.encode(message.params, writer.uint32(26).fork()).ldelim();
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof minimal_1.default.Reader ? input : minimal_1.default.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseGenesisState();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.marketMap = market_1.MarketMap.decode(reader, reader.uint32());
                    continue;
                case 2:
                    if (tag !== 16) {
                        break;
                    }
                    message.lastUpdated = longToBigint(reader.uint64());
                    continue;
                case 3:
                    if (tag !== 26) {
                        break;
                    }
                    message.params = params_1.Params.decode(reader, reader.uint32());
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON(object) {
        return {
            marketMap: isSet(object.marketMap) ? market_1.MarketMap.fromJSON(object.marketMap) : undefined,
            lastUpdated: isSet(object.lastUpdated) ? BigInt(object.lastUpdated) : 0n,
            params: isSet(object.params) ? params_1.Params.fromJSON(object.params) : undefined,
        };
    },
    toJSON(message) {
        const obj = {};
        if (message.marketMap !== undefined) {
            obj.marketMap = market_1.MarketMap.toJSON(message.marketMap);
        }
        if (message.lastUpdated !== 0n) {
            obj.lastUpdated = message.lastUpdated.toString();
        }
        if (message.params !== undefined) {
            obj.params = params_1.Params.toJSON(message.params);
        }
        return obj;
    },
    create(base) {
        return exports.GenesisState.fromPartial(base ?? {});
    },
    fromPartial(object) {
        const message = createBaseGenesisState();
        message.marketMap =
            object.marketMap !== undefined && object.marketMap !== null
                ? market_1.MarketMap.fromPartial(object.marketMap)
                : undefined;
        message.lastUpdated = object.lastUpdated ?? 0n;
        message.params =
            object.params !== undefined && object.params !== null ? params_1.Params.fromPartial(object.params) : undefined;
        return message;
    },
};
const gt = (() => {
    if (typeof globalThis !== "undefined") {
        return globalThis;
    }
    if (typeof self !== "undefined") {
        return self;
    }
    if (typeof window !== "undefined") {
        return window;
    }
    if (typeof global !== "undefined") {
        return global;
    }
    throw "Unable to locate global object";
})();
function longToBigint(long) {
    return BigInt(long.toString());
}
if (minimal_1.default.util.Long !== long_1.default) {
    minimal_1.default.util.Long = long_1.default;
    minimal_1.default.configure();
}
function isSet(value) {
    return value !== null && value !== undefined;
}
//# sourceMappingURL=genesis.js.map