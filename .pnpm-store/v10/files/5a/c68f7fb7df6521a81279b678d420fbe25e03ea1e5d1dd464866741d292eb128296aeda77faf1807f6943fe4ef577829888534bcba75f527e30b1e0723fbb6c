import _m0 from "protobufjs/minimal";
export declare const protobufPackage = "noble.forwarding.v1";
export interface GenesisState {
    allowedDenoms: string[];
    numOfAccounts: Map<string, bigint>;
    numOfForwards: Map<string, bigint>;
    totalForwarded: Map<string, string>;
}
export interface GenesisState_NumOfAccountsEntry {
    key: string;
    value: bigint;
}
export interface GenesisState_NumOfForwardsEntry {
    key: string;
    value: bigint;
}
export interface GenesisState_TotalForwardedEntry {
    key: string;
    value: string;
}
export declare const GenesisState: {
    encode(message: GenesisState, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): GenesisState;
    fromJSON(object: any): GenesisState;
    toJSON(message: GenesisState): unknown;
    create(base?: DeepPartial<GenesisState>): GenesisState;
    fromPartial(object: DeepPartial<GenesisState>): GenesisState;
};
export declare const GenesisState_NumOfAccountsEntry: {
    encode(message: GenesisState_NumOfAccountsEntry, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): GenesisState_NumOfAccountsEntry;
    fromJSON(object: any): GenesisState_NumOfAccountsEntry;
    toJSON(message: GenesisState_NumOfAccountsEntry): unknown;
    create(base?: DeepPartial<GenesisState_NumOfAccountsEntry>): GenesisState_NumOfAccountsEntry;
    fromPartial(object: DeepPartial<GenesisState_NumOfAccountsEntry>): GenesisState_NumOfAccountsEntry;
};
export declare const GenesisState_NumOfForwardsEntry: {
    encode(message: GenesisState_NumOfForwardsEntry, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): GenesisState_NumOfForwardsEntry;
    fromJSON(object: any): GenesisState_NumOfForwardsEntry;
    toJSON(message: GenesisState_NumOfForwardsEntry): unknown;
    create(base?: DeepPartial<GenesisState_NumOfForwardsEntry>): GenesisState_NumOfForwardsEntry;
    fromPartial(object: DeepPartial<GenesisState_NumOfForwardsEntry>): GenesisState_NumOfForwardsEntry;
};
export declare const GenesisState_TotalForwardedEntry: {
    encode(message: GenesisState_TotalForwardedEntry, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): GenesisState_TotalForwardedEntry;
    fromJSON(object: any): GenesisState_TotalForwardedEntry;
    toJSON(message: GenesisState_TotalForwardedEntry): unknown;
    create(base?: DeepPartial<GenesisState_TotalForwardedEntry>): GenesisState_TotalForwardedEntry;
    fromPartial(object: DeepPartial<GenesisState_TotalForwardedEntry>): GenesisState_TotalForwardedEntry;
};
type Builtin = Date | Function | Uint8Array | string | number | boolean | bigint | undefined;
export type DeepPartial<T> = T extends Builtin ? T : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>> : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>> : T extends {} ? {
    [K in keyof T]?: DeepPartial<T[K]>;
} : Partial<T>;
export {};
