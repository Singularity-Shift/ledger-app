import { JSONSerializable } from '../../../util/json';
import { AccAddress } from '../../bech32';
import { Any } from '@initia/initia.proto/google/protobuf/any';
import { MsgSubmitEvidence as MsgSubmitEvidence_pb } from '@initia/initia.proto/cosmos/evidence/v1beta1/tx';
import { Evidence } from '../Evidence';
export declare class MsgSubmitEvidence extends JSONSerializable<MsgSubmitEvidence.Amino, MsgSubmitEvidence.Data, MsgSubmitEvidence.Proto> {
    submitter: AccAddress;
    evidence: Evidence;
    constructor(submitter: AccAddress, evidence: Evidence);
    static fromAmino(data: MsgSubmitEvidence.Amino): MsgSubmitEvidence;
    toAmino(): MsgSubmitEvidence.Amino;
    static fromData(data: MsgSubmitEvidence.Data): MsgSubmitEvidence;
    toData(): MsgSubmitEvidence.Data;
    static fromProto(data: MsgSubmitEvidence.Proto): MsgSubmitEvidence;
    toProto(): MsgSubmitEvidence.Proto;
    packAny(): Any;
    static unpackAny(msgAny: Any): MsgSubmitEvidence;
}
export declare namespace MsgSubmitEvidence {
    interface Amino {
        type: 'cosmos-sdk/MsgSubmitEvidence';
        value: {
            submitter: AccAddress;
            evidence: Evidence.Amino;
        };
    }
    interface Data {
        '@type': '/cosmos.evidence.v1beta1.MsgSubmitEvidence';
        submitter: AccAddress;
        evidence: Evidence.Data;
    }
    type Proto = MsgSubmitEvidence_pb;
}
