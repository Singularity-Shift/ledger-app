import { BaseAPI } from './BaseAPI';
import { APIParams, Pagination, PaginationOptions } from '../APIRequester';
import { OpValidator, ValAddress, OpchildParams, BridgeInfo } from '../../../core';
export declare class OpchildAPI extends BaseAPI {
    validators(params?: Partial<PaginationOptions & APIParams>, headers?: Record<string, string>): Promise<[OpValidator[], Pagination]>;
    validator(validator_addr: ValAddress, params?: APIParams, headers?: Record<string, string>): Promise<OpValidator>;
    bridgeInfo(params?: APIParams, headers?: Record<string, string>): Promise<BridgeInfo>;
    nextL1Sequence(params?: APIParams, headers?: Record<string, string>): Promise<number>;
    nextL2Sequence(params?: APIParams, headers?: Record<string, string>): Promise<number>;
    baseDenom(denom: string, params?: APIParams, headers?: Record<string, string>): Promise<string>;
    parameters(params?: APIParams, headers?: Record<string, string>): Promise<OpchildParams>;
}
