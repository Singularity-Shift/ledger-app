import { JSONSerializable } from '../../../util/json';
import { AccAddress } from '../../bech32';
import { Any } from '@initia/initia.proto/google/protobuf/any';
import { MemberRequest } from '../GroupMember';
import { MsgCreateGroup as MsgCreateGroup_pb } from '@initia/initia.proto/cosmos/group/v1/tx';
export declare class MsgCreateGroup extends JSONSerializable<MsgCreateGroup.Amino, MsgCreateGroup.Data, MsgCreateGroup.Proto> {
    admin: AccAddress;
    members: MemberRequest[];
    metadata: string;
    constructor(admin: AccAddress, members: MemberRequest[], metadata: string);
    static fromAmino(data: MsgCreateGroup.Amino): MsgCreateGroup;
    toAmino(): MsgCreateGroup.Amino;
    static fromData(data: MsgCreateGroup.Data): MsgCreateGroup;
    toData(): MsgCreateGroup.Data;
    static fromProto(data: MsgCreateGroup.Proto): MsgCreateGroup;
    toProto(): MsgCreateGroup.Proto;
    packAny(): Any;
    static unpackAny(msgAny: Any): MsgCreateGroup;
}
export declare namespace MsgCreateGroup {
    interface Amino {
        type: 'cosmos-sdk/MsgCreateGroup';
        value: {
            admin: AccAddress;
            members: MemberRequest.Amino[] | null;
            metadata: string;
        };
    }
    interface Data {
        '@type': '/cosmos.group.v1.MsgCreateGroup';
        admin: AccAddress;
        members: MemberRequest.Data[];
        metadata: string;
    }
    type Proto = MsgCreateGroup_pb;
}
