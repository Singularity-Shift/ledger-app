import { JSONSerializable } from '../../../util/json';
import { AccAddress } from '../../bech32';
import { Msg } from '../../Msg';
import { Any } from '@initia/initia.proto/google/protobuf/any';
import { MsgExecuteMessages as MsgExecuteMessages_pb } from '@initia/opinit.proto/opinit/opchild/v1/tx';
export declare class MsgExecuteMessages extends JSONSerializable<MsgExecuteMessages.Amino, MsgExecuteMessages.Data, MsgExecuteMessages.Proto> {
    sender: AccAddress;
    messages: Msg[];
    constructor(sender: AccAddress, messages: Msg[]);
    static fromAmino(data: MsgExecuteMessages.Amino): MsgExecuteMessages;
    toAmino(): MsgExecuteMessages.Amino;
    static fromData(data: MsgExecuteMessages.Data): MsgExecuteMessages;
    toData(): MsgExecuteMessages.Data;
    static fromProto(data: MsgExecuteMessages.Proto): MsgExecuteMessages;
    toProto(): MsgExecuteMessages.Proto;
    packAny(): Any;
    static unpackAny(msgAny: Any): MsgExecuteMessages;
}
export declare namespace MsgExecuteMessages {
    interface Amino {
        type: 'opchild/MsgExecuteMessages';
        value: {
            sender: AccAddress;
            messages: Msg.Amino[];
        };
    }
    interface Data {
        '@type': '/opinit.opchild.v1.MsgExecuteMessages';
        sender: AccAddress;
        messages: Msg.Data[];
    }
    type Proto = MsgExecuteMessages_pb;
}
