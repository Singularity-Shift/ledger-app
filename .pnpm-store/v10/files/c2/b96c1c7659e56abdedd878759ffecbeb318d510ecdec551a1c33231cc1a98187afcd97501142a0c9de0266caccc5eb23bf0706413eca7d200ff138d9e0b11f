"use strict";
// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v1.181.1
//   protoc               v5.27.1
// source: cosmos/bank/module/v1/module.proto
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Module = exports.protobufPackage = void 0;
/* eslint-disable */
const minimal_1 = __importDefault(require("protobufjs/minimal"));
exports.protobufPackage = "cosmos.bank.module.v1";
function createBaseModule() {
    return { blockedModuleAccountsOverride: [], authority: "", restrictionsOrder: [] };
}
exports.Module = {
    encode(message, writer = minimal_1.default.Writer.create()) {
        for (const v of message.blockedModuleAccountsOverride) {
            writer.uint32(10).string(v);
        }
        if (message.authority !== "") {
            writer.uint32(18).string(message.authority);
        }
        for (const v of message.restrictionsOrder) {
            writer.uint32(26).string(v);
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof minimal_1.default.Reader ? input : minimal_1.default.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseModule();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.blockedModuleAccountsOverride.push(reader.string());
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.authority = reader.string();
                    continue;
                case 3:
                    if (tag !== 26) {
                        break;
                    }
                    message.restrictionsOrder.push(reader.string());
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON(object) {
        return {
            blockedModuleAccountsOverride: gt.Array.isArray(object?.blockedModuleAccountsOverride)
                ? object.blockedModuleAccountsOverride.map((e) => gt.String(e))
                : [],
            authority: isSet(object.authority) ? gt.String(object.authority) : "",
            restrictionsOrder: gt.Array.isArray(object?.restrictionsOrder)
                ? object.restrictionsOrder.map((e) => gt.String(e))
                : [],
        };
    },
    toJSON(message) {
        const obj = {};
        if (message.blockedModuleAccountsOverride?.length) {
            obj.blockedModuleAccountsOverride = message.blockedModuleAccountsOverride;
        }
        if (message.authority !== "") {
            obj.authority = message.authority;
        }
        if (message.restrictionsOrder?.length) {
            obj.restrictionsOrder = message.restrictionsOrder;
        }
        return obj;
    },
    create(base) {
        return exports.Module.fromPartial(base ?? {});
    },
    fromPartial(object) {
        const message = createBaseModule();
        message.blockedModuleAccountsOverride = object.blockedModuleAccountsOverride?.map((e) => e) || [];
        message.authority = object.authority ?? "";
        message.restrictionsOrder = object.restrictionsOrder?.map((e) => e) || [];
        return message;
    },
};
const gt = (() => {
    if (typeof globalThis !== "undefined") {
        return globalThis;
    }
    if (typeof self !== "undefined") {
        return self;
    }
    if (typeof window !== "undefined") {
        return window;
    }
    if (typeof global !== "undefined") {
        return global;
    }
    throw "Unable to locate global object";
})();
function isSet(value) {
    return value !== null && value !== undefined;
}
//# sourceMappingURL=module.js.map