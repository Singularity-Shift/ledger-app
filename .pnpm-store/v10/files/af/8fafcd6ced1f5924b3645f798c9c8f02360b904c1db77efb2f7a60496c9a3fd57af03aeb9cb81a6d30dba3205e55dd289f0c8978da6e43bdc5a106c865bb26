import { JSONSerializable } from '../../../util/json';
import { AccAddress } from '../../bech32';
import { Any } from '@initia/initia.proto/google/protobuf/any';
import { MsgVote as MsgVote_pb, Exec as Exec_pb } from '@initia/initia.proto/cosmos/group/v1/tx';
import { VoteOption } from '@initia/initia.proto/cosmos/group/v1/types';
export declare class MsgGroupVote extends JSONSerializable<MsgGroupVote.Amino, MsgGroupVote.Data, MsgGroupVote.Proto> {
    proposal_id: number;
    voter: AccAddress;
    option: MsgGroupVote.Option;
    metadata: string;
    exec: MsgGroupVote.Exec;
    constructor(proposal_id: number, voter: AccAddress, option: MsgGroupVote.Option, metadata: string, exec: MsgGroupVote.Exec);
    static fromAmino(data: MsgGroupVote.Amino): MsgGroupVote;
    toAmino(): MsgGroupVote.Amino;
    static fromData(data: MsgGroupVote.Data): MsgGroupVote;
    toData(): MsgGroupVote.Data;
    static fromProto(data: MsgGroupVote.Proto): MsgGroupVote;
    toProto(): MsgGroupVote.Proto;
    packAny(): Any;
    static unpackAny(msgAny: Any): MsgGroupVote;
}
export declare namespace MsgGroupVote {
    type Option = VoteOption;
    const Option: typeof VoteOption;
    type Exec = Exec_pb;
    const Exec: typeof Exec_pb;
    interface Amino {
        type: 'cosmos-sdk/group/MsgVote';
        value: {
            proposal_id: string;
            voter: AccAddress;
            option: string;
            metadata: string;
            exec: string;
        };
    }
    interface Data {
        '@type': '/cosmos.group.v1.MsgVote';
        proposal_id: string;
        voter: AccAddress;
        option: string;
        metadata: string;
        exec: string;
    }
    type Proto = MsgVote_pb;
}
