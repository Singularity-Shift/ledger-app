import { JSONSerializable } from '../../util/json';
import { Coins } from '../Coins';
import { AccAddress, ValAddress } from '../bech32';
import { RedelegationResponse as RedelegationResponse_pb, RedelegationEntryResponse as RedelegationEntryResponse_pb } from '@initia/initia.proto/initia/mstaking/v1/staking';
export declare class Redelegation extends JSONSerializable<Redelegation.Amino, Redelegation.Data, Redelegation.Proto> {
    delegator_address: AccAddress;
    validator_src_address: ValAddress;
    validator_dst_address: ValAddress;
    entries: Redelegation.Entry[];
    constructor(delegator_address: AccAddress, validator_src_address: ValAddress, validator_dst_address: ValAddress, entries: Redelegation.Entry[]);
    static fromAmino(data: Redelegation.Amino): Redelegation;
    toAmino(): Redelegation.Amino;
    static fromData(data: Redelegation.Data): Redelegation;
    toData(): Redelegation.Data;
    static fromProto(data: Redelegation.Proto): Redelegation;
    toProto(): Redelegation.Proto;
}
export declare namespace Redelegation {
    interface Amino {
        redelegation: {
            delegator_address: AccAddress;
            validator_src_address: ValAddress;
            validator_dst_address: ValAddress;
        };
        entries: Redelegation.Entry.Amino[];
    }
    interface Data {
        redelegation: {
            delegator_address: AccAddress;
            validator_src_address: ValAddress;
            validator_dst_address: ValAddress;
        };
        entries: Redelegation.Entry.Data[];
    }
    type Proto = RedelegationResponse_pb;
    class Entry extends JSONSerializable<Entry.Amino, Entry.Data, Entry.Proto> {
        creation_height: number;
        completion_time: Date;
        initial_balance: Coins;
        shares_dst: Coins;
        balance: Coins;
        constructor(initial_balance: Coins.Input, balance: Coins.Input, shares_dst: Coins.Input, creation_height: number, completion_time: Date);
        static fromAmino(data: Entry.Amino): Entry;
        toAmino(): Entry.Amino;
        static fromData(data: Entry.Data): Entry;
        toData(): Entry.Data;
        static fromProto(proto: Entry.Proto): Entry;
        toProto(): Entry.Proto;
    }
    namespace Entry {
        interface Amino {
            redelegation_entry: {
                creation_height: number;
                completion_time: string;
                initial_balance: Coins.Amino;
                shares_dst: Coins.Amino;
            };
            balance: Coins.Amino;
        }
        interface Data {
            redelegation_entry: {
                creation_height: number;
                completion_time: string;
                initial_balance: Coins.Data;
                shares_dst: Coins.Data;
            };
            balance: Coins.Data;
        }
        type Proto = RedelegationEntryResponse_pb;
    }
}
