"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.createEntryPayload = void 0;
const ts_sdk_1 = require("@aptos-labs/ts-sdk");
function createEntryPayload(abi, payload) {
    const fnAbi = abi.exposed_functions.filter((f) => f.name === payload.function)[0];
    if (fnAbi === undefined)
        throw new Error(`Function ${payload.function} not found in ABI`);
    const typeArguments = payload.typeArguments;
    const valArguments = payload.functionArguments;
    const nonSignerIndex = fnAbi.params.findIndex((param) => param !== '&signer');
    const abiArgs = fnAbi.params.slice(nonSignerIndex === -1 ? fnAbi.params.length : nonSignerIndex);
    if (fnAbi === undefined)
        throw new Error(`Function ${payload.function} not found in ABI`);
    if (abiArgs.length !== valArguments.length)
        throw new Error(`Function ${payload.function} expects ${fnAbi.params.length} arguments, but ${payload.functionArguments.length} were provided`);
    if (fnAbi.generic_type_params.length !== typeArguments.length)
        throw new Error(`Function ${payload.function} expects ${fnAbi.generic_type_params.length} type arguments, but ${payload.typeArguments.length} were provided`);
    return {
        typeArguments: payload.typeArguments,
        functionArguments: payload.functionArguments,
        function: `${payload.address ?? abi.address}::${abi.name}::${payload.function}`,
        abi: constructEntryAbiObj(fnAbi),
    };
}
exports.createEntryPayload = createEntryPayload;
function constructEntryAbiObj(abi) {
    if (!abi.is_entry) {
        throw new Error(`not an entry function`);
    }
    const params = [];
    for (let i = 0; i < abi.params.length; i += 1) {
        params.push((0, ts_sdk_1.parseTypeTag)(abi.params[i], { allowGenerics: true }));
    }
    const returnTypes = [];
    for (let i = 0; i < abi.return.length; i += 1) {
        returnTypes.push((0, ts_sdk_1.parseTypeTag)(abi.return[i], { allowGenerics: true }));
    }
    return {
        typeParameters: abi.generic_type_params,
        parameters: params,
    };
}
//# sourceMappingURL=createEntryPayload.js.map