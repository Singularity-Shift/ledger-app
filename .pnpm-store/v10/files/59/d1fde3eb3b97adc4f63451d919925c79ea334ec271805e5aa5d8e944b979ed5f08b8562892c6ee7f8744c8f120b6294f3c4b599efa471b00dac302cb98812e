export declare const INITIA_COIN_ABI: {
    readonly address: "0x1";
    readonly name: "coin";
    readonly friends: readonly ["0x1::managed_coin", "0x1::staking"];
    readonly exposed_functions: readonly [{
        readonly name: "name";
        readonly visibility: "public";
        readonly is_entry: false;
        readonly is_view: true;
        readonly generic_type_params: readonly [];
        readonly params: readonly ["0x1::object::Object<0x1::fungible_asset::Metadata>"];
        readonly return: readonly ["0x1::string::String"];
    }, {
        readonly name: "transfer";
        readonly visibility: "public";
        readonly is_entry: true;
        readonly is_view: false;
        readonly generic_type_params: readonly [];
        readonly params: readonly ["&signer", "address", "0x1::object::Object<0x1::fungible_asset::Metadata>", "u64"];
        readonly return: readonly [];
    }, {
        readonly name: "metadata";
        readonly visibility: "public";
        readonly is_entry: false;
        readonly is_view: true;
        readonly generic_type_params: readonly [];
        readonly params: readonly ["address", "0x1::string::String"];
        readonly return: readonly ["0x1::object::Object<0x1::fungible_asset::Metadata>"];
    }, {
        readonly name: "symbol";
        readonly visibility: "public";
        readonly is_entry: false;
        readonly is_view: true;
        readonly generic_type_params: readonly [];
        readonly params: readonly ["0x1::object::Object<0x1::fungible_asset::Metadata>"];
        readonly return: readonly ["0x1::string::String"];
    }, {
        readonly name: "decimals";
        readonly visibility: "public";
        readonly is_entry: false;
        readonly is_view: true;
        readonly generic_type_params: readonly [];
        readonly params: readonly ["0x1::object::Object<0x1::fungible_asset::Metadata>"];
        readonly return: readonly ["u8"];
    }, {
        readonly name: "balance";
        readonly visibility: "public";
        readonly is_entry: false;
        readonly is_view: true;
        readonly generic_type_params: readonly [];
        readonly params: readonly ["address", "0x1::object::Object<0x1::fungible_asset::Metadata>"];
        readonly return: readonly ["u64"];
    }, {
        readonly name: "burn";
        readonly visibility: "public";
        readonly is_entry: false;
        readonly is_view: false;
        readonly generic_type_params: readonly [];
        readonly params: readonly ["&0x1::coin::BurnCapability", "0x1::fungible_asset::FungibleAsset"];
        readonly return: readonly [];
    }, {
        readonly name: "deposit";
        readonly visibility: "public";
        readonly is_entry: false;
        readonly is_view: false;
        readonly generic_type_params: readonly [];
        readonly params: readonly ["address", "0x1::fungible_asset::FungibleAsset"];
        readonly return: readonly [];
    }, {
        readonly name: "is_frozen";
        readonly visibility: "public";
        readonly is_entry: false;
        readonly is_view: true;
        readonly generic_type_params: readonly [];
        readonly params: readonly ["address", "0x1::object::Object<0x1::fungible_asset::Metadata>"];
        readonly return: readonly ["bool"];
    }, {
        readonly name: "maximum";
        readonly visibility: "public";
        readonly is_entry: false;
        readonly is_view: true;
        readonly generic_type_params: readonly [];
        readonly params: readonly ["0x1::object::Object<0x1::fungible_asset::Metadata>"];
        readonly return: readonly ["0x1::option::Option<u128>"];
    }, {
        readonly name: "mint";
        readonly visibility: "public";
        readonly is_entry: false;
        readonly is_view: false;
        readonly generic_type_params: readonly [];
        readonly params: readonly ["&0x1::coin::MintCapability", "u64"];
        readonly return: readonly ["0x1::fungible_asset::FungibleAsset"];
    }, {
        readonly name: "mint_to";
        readonly visibility: "public";
        readonly is_entry: false;
        readonly is_view: false;
        readonly generic_type_params: readonly [];
        readonly params: readonly ["&0x1::coin::MintCapability", "address", "u64"];
        readonly return: readonly [];
    }, {
        readonly name: "sudo_deposit";
        readonly visibility: "friend";
        readonly is_entry: false;
        readonly is_view: false;
        readonly generic_type_params: readonly [];
        readonly params: readonly ["address", "0x1::fungible_asset::FungibleAsset"];
        readonly return: readonly [];
    }, {
        readonly name: "sudo_transfer";
        readonly visibility: "public";
        readonly is_entry: true;
        readonly is_view: false;
        readonly generic_type_params: readonly [];
        readonly params: readonly ["&signer", "&signer", "address", "0x1::object::Object<0x1::fungible_asset::Metadata>", "u64"];
        readonly return: readonly [];
    }, {
        readonly name: "supply";
        readonly visibility: "public";
        readonly is_entry: false;
        readonly is_view: true;
        readonly generic_type_params: readonly [];
        readonly params: readonly ["0x1::object::Object<0x1::fungible_asset::Metadata>"];
        readonly return: readonly ["0x1::option::Option<u128>"];
    }, {
        readonly name: "withdraw";
        readonly visibility: "public";
        readonly is_entry: false;
        readonly is_view: false;
        readonly generic_type_params: readonly [];
        readonly params: readonly ["&signer", "0x1::object::Object<0x1::fungible_asset::Metadata>", "u64"];
        readonly return: readonly ["0x1::fungible_asset::FungibleAsset"];
    }, {
        readonly name: "metadata_address";
        readonly visibility: "public";
        readonly is_entry: false;
        readonly is_view: true;
        readonly generic_type_params: readonly [];
        readonly params: readonly ["address", "0x1::string::String"];
        readonly return: readonly ["address"];
    }, {
        readonly name: "balances";
        readonly visibility: "public";
        readonly is_entry: false;
        readonly is_view: true;
        readonly generic_type_params: readonly [];
        readonly params: readonly ["address", "0x1::option::Option<address>", "u8"];
        readonly return: readonly ["vector<0x1::object::Object<0x1::fungible_asset::Metadata>>", "vector<u64>"];
    }, {
        readonly name: "denom_to_metadata";
        readonly visibility: "public";
        readonly is_entry: false;
        readonly is_view: true;
        readonly generic_type_params: readonly [];
        readonly params: readonly ["0x1::string::String"];
        readonly return: readonly ["0x1::object::Object<0x1::fungible_asset::Metadata>"];
    }, {
        readonly name: "freeze_coin_store";
        readonly visibility: "public";
        readonly is_entry: false;
        readonly is_view: false;
        readonly generic_type_params: readonly [];
        readonly params: readonly ["&0x1::coin::FreezeCapability", "address"];
        readonly return: readonly [];
    }, {
        readonly name: "initialize";
        readonly visibility: "public";
        readonly is_entry: false;
        readonly is_view: false;
        readonly generic_type_params: readonly [];
        readonly params: readonly ["&signer", "0x1::option::Option<u128>", "0x1::string::String", "0x1::string::String", "u8", "0x1::string::String", "0x1::string::String"];
        readonly return: readonly ["0x1::coin::MintCapability", "0x1::coin::BurnCapability", "0x1::coin::FreezeCapability"];
    }, {
        readonly name: "initialize_and_generate_extend_ref";
        readonly visibility: "public";
        readonly is_entry: false;
        readonly is_view: false;
        readonly generic_type_params: readonly [];
        readonly params: readonly ["&signer", "0x1::option::Option<u128>", "0x1::string::String", "0x1::string::String", "u8", "0x1::string::String", "0x1::string::String"];
        readonly return: readonly ["0x1::coin::MintCapability", "0x1::coin::BurnCapability", "0x1::coin::FreezeCapability", "0x1::object::ExtendRef"];
    }, {
        readonly name: "is_coin";
        readonly visibility: "public";
        readonly is_entry: false;
        readonly is_view: true;
        readonly generic_type_params: readonly [];
        readonly params: readonly ["address"];
        readonly return: readonly ["bool"];
    }, {
        readonly name: "is_coin_by_symbol";
        readonly visibility: "public";
        readonly is_entry: false;
        readonly is_view: true;
        readonly generic_type_params: readonly [];
        readonly params: readonly ["address", "0x1::string::String"];
        readonly return: readonly ["bool"];
    }, {
        readonly name: "metadata_to_denom";
        readonly visibility: "public";
        readonly is_entry: false;
        readonly is_view: true;
        readonly generic_type_params: readonly [];
        readonly params: readonly ["0x1::object::Object<0x1::fungible_asset::Metadata>"];
        readonly return: readonly ["0x1::string::String"];
    }, {
        readonly name: "sudo_multisend";
        readonly visibility: "public";
        readonly is_entry: true;
        readonly is_view: false;
        readonly generic_type_params: readonly [];
        readonly params: readonly ["&signer", "&signer", "0x1::object::Object<0x1::fungible_asset::Metadata>", "vector<address>", "vector<u64>"];
        readonly return: readonly [];
    }, {
        readonly name: "unfreeze_coin_store";
        readonly visibility: "public";
        readonly is_entry: false;
        readonly is_view: false;
        readonly generic_type_params: readonly [];
        readonly params: readonly ["&0x1::coin::FreezeCapability", "address"];
        readonly return: readonly [];
    }];
    readonly structs: readonly [{
        readonly name: "BurnCapability";
        readonly is_native: false;
        readonly abilities: readonly ["drop", "store"];
        readonly generic_type_params: readonly [];
        readonly fields: readonly [{
            readonly name: "metadata";
            readonly type: "0x1::object::Object<0x1::fungible_asset::Metadata>";
        }];
    }, {
        readonly name: "Coin";
        readonly is_native: false;
        readonly abilities: readonly [];
        readonly generic_type_params: readonly [{
            readonly constraints: readonly [];
            readonly is_phantom: true;
        }];
        readonly fields: readonly [{
            readonly name: "dummy_field";
            readonly type: "bool";
        }];
    }, {
        readonly name: "CoinCreatedEvent";
        readonly is_native: false;
        readonly abilities: readonly ["drop", "store"];
        readonly generic_type_params: readonly [];
        readonly fields: readonly [{
            readonly name: "metadata_addr";
            readonly type: "address";
        }];
    }, {
        readonly name: "FreezeCapability";
        readonly is_native: false;
        readonly abilities: readonly ["drop", "store"];
        readonly generic_type_params: readonly [];
        readonly fields: readonly [{
            readonly name: "metadata";
            readonly type: "0x1::object::Object<0x1::fungible_asset::Metadata>";
        }];
    }, {
        readonly name: "ManagingRefs";
        readonly is_native: false;
        readonly abilities: readonly ["key"];
        readonly generic_type_params: readonly [];
        readonly fields: readonly [{
            readonly name: "mint_ref";
            readonly type: "0x1::fungible_asset::MintRef";
        }, {
            readonly name: "burn_ref";
            readonly type: "0x1::fungible_asset::BurnRef";
        }, {
            readonly name: "transfer_ref";
            readonly type: "0x1::fungible_asset::TransferRef";
        }];
    }, {
        readonly name: "MintCapability";
        readonly is_native: false;
        readonly abilities: readonly ["drop", "store"];
        readonly generic_type_params: readonly [];
        readonly fields: readonly [{
            readonly name: "metadata";
            readonly type: "0x1::object::Object<0x1::fungible_asset::Metadata>";
        }];
    }];
};
//# sourceMappingURL=initia_coin.d.ts.map