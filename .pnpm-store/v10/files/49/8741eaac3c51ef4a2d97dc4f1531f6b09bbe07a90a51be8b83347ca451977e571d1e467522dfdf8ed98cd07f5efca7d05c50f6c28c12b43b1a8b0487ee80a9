import { JSONSerializable } from '../../util/json';
import { ValAddress } from '../bech32';
import { ValConsPublicKey } from '../PublicKey';
import { Validator as Validator_pb } from '@initia/opinit.proto/opinit/opchild/v1/types';
export declare class OpValidator extends JSONSerializable<OpValidator.Amino, OpValidator.Data, OpValidator.Proto> {
    moniker: string;
    operator_address: ValAddress;
    consensus_pubkey: ValConsPublicKey;
    cons_power: number;
    constructor(moniker: string, operator_address: ValAddress, consensus_pubkey: ValConsPublicKey, cons_power: number);
    static fromAmino(data: OpValidator.Amino): OpValidator;
    toAmino(): OpValidator.Amino;
    static fromData(data: OpValidator.Data): OpValidator;
    toData(): OpValidator.Data;
    static fromProto(data: OpValidator.Proto): OpValidator;
    toProto(): OpValidator.Proto;
}
export declare namespace OpValidator {
    interface Amino {
        moniker: string;
        operator_address: ValAddress;
        consensus_pubkey: ValConsPublicKey.Amino;
        cons_power: string;
    }
    interface Data {
        moniker: string;
        operator_address: ValAddress;
        consensus_pubkey: ValConsPublicKey.Data;
        cons_power: string;
    }
    type Proto = Validator_pb;
}
