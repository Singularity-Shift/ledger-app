import { JSONSerializable } from '../../../util/json';
import { AccAddress } from '../../bech32';
import { DecisionPolicy } from '../policies';
import { Any } from '@initia/initia.proto/google/protobuf/any';
import { MsgCreateGroupPolicy as MsgCreateGroupPolicy_pb } from '@initia/initia.proto/cosmos/group/v1/tx';
export declare class MsgCreateGroupPolicy extends JSONSerializable<MsgCreateGroupPolicy.Amino, MsgCreateGroupPolicy.Data, MsgCreateGroupPolicy.Proto> {
    admin: AccAddress;
    group_id: number;
    metadata: string;
    decision_policy: DecisionPolicy;
    constructor(admin: AccAddress, group_id: number, metadata: string, decision_policy: DecisionPolicy);
    static fromAmino(data: MsgCreateGroupPolicy.Amino): MsgCreateGroupPolicy;
    toAmino(): MsgCreateGroupPolicy.Amino;
    static fromData(data: MsgCreateGroupPolicy.Data): MsgCreateGroupPolicy;
    toData(): MsgCreateGroupPolicy.Data;
    static fromProto(data: MsgCreateGroupPolicy.Proto): MsgCreateGroupPolicy;
    toProto(): MsgCreateGroupPolicy.Proto;
    packAny(): Any;
    static unpackAny(msgAny: Any): MsgCreateGroupPolicy;
}
export declare namespace MsgCreateGroupPolicy {
    interface Amino {
        type: 'cosmos-sdk/MsgCreateGroupPolicy';
        value: {
            admin: AccAddress;
            group_id: string;
            metadata: string;
            decision_policy: DecisionPolicy.Amino;
        };
    }
    interface Data {
        '@type': '/cosmos.group.v1.MsgCreateGroupPolicy';
        admin: AccAddress;
        group_id: string;
        metadata: string;
        decision_policy: DecisionPolicy.Data;
    }
    type Proto = MsgCreateGroupPolicy_pb;
}
