import { JSONSerializable } from '../../../util/json';
import { AccAddress } from '../../bech32';
import { Coin } from '../../Coin';
import { MsgInitiateTokenDeposit as MsgInitiateTokenDeposit_pb } from '@initia/opinit.proto/opinit/ophost/v1/tx';
import { Any } from '@initia/initia.proto/google/protobuf/any';
export declare class MsgInitiateTokenDeposit extends JSONSerializable<MsgInitiateTokenDeposit.Amino, MsgInitiateTokenDeposit.Data, MsgInitiateTokenDeposit.Proto> {
    sender: AccAddress;
    bridge_id: number;
    to: AccAddress;
    amount: Coin;
    data?: string | undefined;
    constructor(sender: AccAddress, bridge_id: number, to: AccAddress, amount: Coin, data?: string | undefined);
    static fromAmino(msgAmino: MsgInitiateTokenDeposit.Amino): MsgInitiateTokenDeposit;
    toAmino(): MsgInitiateTokenDeposit.Amino;
    static fromData(msgData: MsgInitiateTokenDeposit.Data): MsgInitiateTokenDeposit;
    toData(): MsgInitiateTokenDeposit.Data;
    static fromProto(msgProto: MsgInitiateTokenDeposit.Proto): MsgInitiateTokenDeposit;
    toProto(): MsgInitiateTokenDeposit.Proto;
    packAny(): Any;
    static unpackAny(msgAny: Any): MsgInitiateTokenDeposit;
}
export declare namespace MsgInitiateTokenDeposit {
    interface Amino {
        type: 'ophost/MsgInitiateTokenDeposit';
        value: {
            sender: AccAddress;
            bridge_id: string;
            to: AccAddress;
            amount: Coin.Amino;
            data?: string;
        };
    }
    interface Data {
        '@type': '/opinit.ophost.v1.MsgInitiateTokenDeposit';
        sender: AccAddress;
        bridge_id: string;
        to: AccAddress;
        amount: Coin.Data;
        data?: string;
    }
    type Proto = MsgInitiateTokenDeposit_pb;
}
