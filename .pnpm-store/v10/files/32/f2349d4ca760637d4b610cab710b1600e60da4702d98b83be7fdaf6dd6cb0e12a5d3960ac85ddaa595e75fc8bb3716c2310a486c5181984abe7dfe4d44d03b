import { JSONSerializable } from '../../util/json';
import { Tx } from '../tx/Tx';
import { Blob } from './Blob';
import { BlobTx as BlobTx_pb } from '@initia/initia.proto/celestia/blob/v1/blob';
export declare class BlobTx extends JSONSerializable<any, BlobTx.Data, BlobTx.Proto> {
    tx: Tx;
    blobs: Blob[];
    type_id: string;
    constructor(tx: Tx, blobs: Blob[], type_id: string);
    static fromAmino(_: any): BlobTx;
    toAmino(): any;
    static fromData(data: BlobTx.Data): BlobTx;
    toData(): BlobTx.Data;
    static fromProto(data: BlobTx.Proto): BlobTx;
    toProto(): BlobTx.Proto;
    toBytes(): Uint8Array;
}
export declare namespace BlobTx {
    interface Data {
        tx: Tx.Data;
        blobs: Blob.Data[];
        type_id: string;
    }
    type Proto = BlobTx_pb;
}
