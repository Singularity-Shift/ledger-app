import _m0 from "protobufjs/minimal";
export declare const protobufPackage = "ibc.applications.nft_transfer.v1";
/**
 * ClassTrace contains the base class id for ICS721 non fungible tokens and the
 * source tracing information path.
 */
export interface ClassTrace {
    /**
     * path defines the chain of port/channel identifiers used for tracing the
     * source of the non fungible token.
     */
    path: string;
    /** base class id of the relayed non fungible token. */
    baseClassId: string;
}
/** Params defines the set of IBC nft transfer parameters. */
export interface Params {
    /** send_enabled enables or disables all cross-chain token transfers from this chain. */
    sendEnabled: boolean;
    /** receive_enabled enables or disables all cross-chain token transfers to this chain. */
    receiveEnabled: boolean;
}
export declare const ClassTrace: {
    encode(message: ClassTrace, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): ClassTrace;
    fromJSON(object: any): ClassTrace;
    toJSON(message: ClassTrace): unknown;
    create(base?: DeepPartial<ClassTrace>): ClassTrace;
    fromPartial(object: DeepPartial<ClassTrace>): ClassTrace;
};
export declare const Params: {
    encode(message: Params, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): Params;
    fromJSON(object: any): Params;
    toJSON(message: Params): unknown;
    create(base?: DeepPartial<Params>): Params;
    fromPartial(object: DeepPartial<Params>): Params;
};
type Builtin = Date | Function | Uint8Array | string | number | boolean | bigint | undefined;
export type DeepPartial<T> = T extends Builtin ? T : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>> : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>> : T extends {} ? {
    [K in keyof T]?: DeepPartial<T[K]>;
} : Partial<T>;
export {};
