import { APIRequester } from './APIRequester';
import { AuctionAPI, AuthAPI, AuthzAPI, BankAPI, DistributionAPI, EvidenceAPI, EvmAPI, FeeGrantAPI, ForwardingAPI, GovAPI, GroupAPI, IbcAPI, IbcHooksAPI, IbcNftAPI, IbcTransferAPI, IbcPermAPI, InterTxAPI, MarketmapAPI, MoveAPI, MstakingAPI, OpchildAPI, OphostAPI, OracleAPI, RewardAPI, SlashingAPI, TendermintAPI, TokenfactoryAPI, TxAPI, UpgradeAPI, WasmAPI } from './api';
import { Wallet } from './Wallet';
import { Coins } from '../../core';
import { Key } from '../../key';
export interface RESTClientConfig {
    chainId?: string;
    gasPrices?: Coins.Input;
    gasAdjustment?: string;
}
export declare class RESTClient {
    URL: string;
    config: RESTClientConfig;
    apiRequester: APIRequester;
    auction: AuctionAPI;
    auth: AuthAPI;
    authz: AuthzAPI;
    bank: BankAPI;
    distribution: DistributionAPI;
    evidence: EvidenceAPI;
    evm: EvmAPI;
    feeGrant: FeeGrantAPI;
    forwarding: ForwardingAPI;
    gov: GovAPI;
    group: GroupAPI;
    ibc: IbcAPI;
    ibcHooks: IbcHooksAPI;
    ibcNft: IbcNftAPI;
    ibcTransfer: IbcTransferAPI;
    ibcPerm: IbcPermAPI;
    interTx: InterTxAPI;
    marketmap: MarketmapAPI;
    move: MoveAPI;
    mstaking: MstakingAPI;
    opchild: OpchildAPI;
    ophost: OphostAPI;
    oracle: OracleAPI;
    reward: RewardAPI;
    slashing: SlashingAPI;
    tendermint: TendermintAPI;
    tokenfactory: TokenfactoryAPI;
    tx: TxAPI;
    upgrade: UpgradeAPI;
    wasm: WasmAPI;
    constructor(URL: string, config?: RESTClientConfig, apiRequester?: APIRequester);
    wallet(key: Key): Wallet;
    gasPrices(): Promise<Coins.Input | undefined>;
}
export declare class LCDClient extends RESTClient {
}
