import { JSONSerializable } from '../../util/json';
import { AccAddress, ValAddress } from '../bech32';
import { Coins } from '../Coins';
import { DelegationResponse as DelegationResponse_pb } from '@initia/initia.proto/initia/mstaking/v1/staking';
export declare class Delegation extends JSONSerializable<Delegation.Amino, Delegation.Data, Delegation.Proto> {
    delegator_address: AccAddress;
    validator_address: ValAddress;
    shares: Coins;
    balance: Coins;
    constructor(delegator_address: AccAddress, validator_address: ValAddress, shares: Coins.Input, balance: Coins.Input);
    static fromAmino(data: Delegation.Amino): Delegation;
    toAmino(): Delegation.Amino;
    static fromData(data: Delegation.Data): Delegation;
    toData(): Delegation.Data;
    static fromProto(proto: Delegation.Proto): Delegation;
    toProto(): Delegation.Proto;
}
export declare namespace Delegation {
    interface Amino {
        delegation: {
            delegator_address: AccAddress;
            validator_address: ValAddress;
            shares: Coins.Amino;
        };
        balance: Coins.Amino;
    }
    interface Data {
        delegation: {
            delegator_address: AccAddress;
            validator_address: ValAddress;
            shares: Coins.Data;
        };
        balance: Coins.Data;
    }
    type Proto = DelegationResponse_pb;
}
