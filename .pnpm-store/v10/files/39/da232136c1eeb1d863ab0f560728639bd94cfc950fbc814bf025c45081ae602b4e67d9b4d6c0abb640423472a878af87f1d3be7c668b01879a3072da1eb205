import { createContext as v, useContext as k, useCallback as q, useSyncExternalStore as I } from "react";
const N = v(null);
function M(t) {
  return new Promise((r, i) => {
    const e = document.createElement("script");
    e.src = t, e.type = "module", e.async = !0, e.defer = !0, e.onload = () => {
      r();
    }, e.onerror = () => {
      i(new Error(`Failed to load script: ${t}`));
    }, document.head.appendChild(e);
  });
}
function j() {
  const {
    onboard: t,
    view: r,
    bridge: i,
    bridgeComponent: { address$: e, ...a },
    requestTx: n,
    requestInitiaTx: c,
    requestEthereumTx: d,
    estimateTx: o,
    estimateInitiaTx: b,
    estimateEthereumTx: l,
    signArbitrary: u,
    verifyArbitrary: p,
    disconnect: x,
    address$: f,
    account$: m,
    wallet$: y,
    keplr$: h,
    ethereum$: g,
    isLoading$: w
  } = k(N), T = q(
    (_) => {
      r(_);
    },
    [r]
  ), z = s(f), U = s(e), $ = s(m), A = s(y), E = s(h), C = s(g), S = s(w);
  return {
    onboard: t,
    view: T,
    bridge: i,
    bridgeComponent: {
      ...a,
      address: U
    },
    requestTx: n,
    requestInitiaTx: c,
    requestEthereumTx: d,
    estimateTx: o,
    estimateInitiaTx: b,
    estimateEthereumTx: l,
    signArbitrary: u,
    verifyArbitrary: p,
    disconnect: x,
    address: z,
    account: $,
    wallet: A,
    keplr: E,
    ethereum: C,
    isLoading: S
  };
}
function F() {
  const { address: t } = j();
  return t;
}
function s(t) {
  return I((e) => {
    const a = t.subscribe(e);
    return () => a.unsubscribe();
  }, () => t.getValue());
}
const O = {
  registryUrl: "https://registry.initia.xyz",
  apiUrl: "https://api.initia.xyz",
  dexApiUrl: "https://dex-api.initia.xyz",
  explorerUrl: "https://scan.initia.xyz",
  swaplistUrl: "https://list.initia.xyz/swaplist.json",
  modules: {
    usernames: "0x72ed9b26ecdcd6a21d304df50f19abfdbe31d2c02f60c84627844620a45940ef",
    dex_utils: "0xb845fba0d0072c282f6284465933c4b32b1a0d4071604935a7a8d999c85d01fb",
    swap_transfer: "0xb845fba0d0072c282f6284465933c4b32b1a0d4071604935a7a8d999c85d01fb"
  }
}, P = {
  registryUrl: "https://registry.testnet.initia.xyz",
  apiUrl: "https://api.testnet.initia.xyz",
  dexApiUrl: "https://dex-api.testnet.initia.xyz",
  explorerUrl: "https://scan.testnet.initia.xyz",
  swaplistUrl: "https://list.testnet.initia.xyz/swaplist.json",
  modules: {
    usernames: "0x42cd8467b1c86e59bf319e5664a09b6b5840bb3fac64f5ce690b5041c530565a",
    dex_utils: "0x42cd8467b1c86e59bf319e5664a09b6b5840bb3fac64f5ce690b5041c530565a",
    swap_transfer: "0x42cd8467b1c86e59bf319e5664a09b6b5840bb3fac64f5ce690b5041c530565a"
  }
};
export {
  O as M,
  P as T,
  F as a,
  N as c,
  M as l,
  j as u
};
