import { JSONSerializable } from '../../../util/json';
import { ExecuteAuthorization as ExecuteAuthorization_pb } from '@initia/initia.proto/initia/move/v1/authz';
import { ExecuteAuthorizationItem as ExecuteAuthorizationItem_pb } from '@initia/initia.proto/initia/move/v1/types';
import { Any } from '@initia/initia.proto/google/protobuf/any';
export declare class ExecuteAuthorization extends JSONSerializable<ExecuteAuthorization.Amino, ExecuteAuthorization.Data, ExecuteAuthorization.Proto> {
    items: ExecuteAuthorizationItem[];
    constructor(items: ExecuteAuthorizationItem[]);
    static fromAmino(data: ExecuteAuthorization.Amino): ExecuteAuthorization;
    toAmino(): ExecuteAuthorization.Amino;
    static fromData(data: ExecuteAuthorization.Data): ExecuteAuthorization;
    toData(): ExecuteAuthorization.Data;
    static fromProto(proto: ExecuteAuthorization.Proto): ExecuteAuthorization;
    toProto(): ExecuteAuthorization.Proto;
    packAny(): Any;
    static unpackAny(msgAny: Any): ExecuteAuthorization;
}
export declare class ExecuteAuthorizationItem extends JSONSerializable<any, ExecuteAuthorizationItem.Data, ExecuteAuthorizationItem.Proto> {
    module_address: string;
    module_name: string;
    function_names: string[];
    constructor(module_address: string, module_name: string, function_names: string[]);
    static fromAmino(data: ExecuteAuthorizationItem.Amino): ExecuteAuthorizationItem;
    toAmino(): ExecuteAuthorizationItem.Amino;
    static fromData(data: ExecuteAuthorizationItem.Data): ExecuteAuthorizationItem;
    toData(): ExecuteAuthorizationItem.Data;
    static fromProto(proto: ExecuteAuthorizationItem.Proto): ExecuteAuthorizationItem;
    toProto(): ExecuteAuthorizationItem.Proto;
}
export declare namespace ExecuteAuthorizationItem {
    interface Amino {
        module_address: string;
        module_name: string;
        function_names: string[];
    }
    interface Data {
        module_address: string;
        module_name: string;
        function_names: string[];
    }
    type Proto = ExecuteAuthorizationItem_pb;
}
export declare namespace ExecuteAuthorization {
    interface Amino {
        type: 'move/ExecuteAuthorization';
        value: {
            items: ExecuteAuthorizationItem.Amino[] | null;
        };
    }
    interface Data {
        '@type': '/initia.move.v1.ExecuteAuthorization';
        items: ExecuteAuthorizationItem.Data[];
    }
    type Proto = ExecuteAuthorization_pb;
}
