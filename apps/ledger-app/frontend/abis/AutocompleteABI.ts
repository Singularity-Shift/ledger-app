export const AutocompleteABI = {
  address: "0x2033b72957c2f0b66cf5be479a2aa098d5bf18c36477907eba8be39435f2811",
  name: "autocomplete",
  friends: [],
  exposed_functions: [
    {
      name: "buy_autocomplete",
      visibility: "public",
      is_entry: true,
      is_view: false,
      generic_type_params: [{ constraints: [] }],
      params: ["&signer"],
      return: [],
    },
    {
      name: "get_autocomplete_payment",
      visibility: "public",
      is_entry: false,
      is_view: true,
      generic_type_params: [],
      params: ["address"],
      return: ["bool"],
    },
    {
      name: "get_config",
      visibility: "public",
      is_entry: false,
      is_view: true,
      generic_type_params: [],
      params: [],
      return: ["u64", "address"],
    },
    {
      name: "reset_payment",
      visibility: "public",
      is_entry: true,
      is_view: false,
      generic_type_params: [],
      params: ["&signer", "address"],
      return: [],
    },
    {
      name: "set_fees",
      visibility: "public",
      is_entry: true,
      is_view: false,
      generic_type_params: [],
      params: ["&signer", "u64"],
      return: [],
    },
    {
      name: "set_new_server",
      visibility: "public",
      is_entry: true,
      is_view: false,
      generic_type_params: [],
      params: ["&signer", "address"],
      return: [],
    },
  ],
  structs: [
    {
      name: "Config",
      is_native: false,
      is_event: false,
      abilities: ["key"],
      generic_type_params: [],
      fields: [
        { name: "fees", type: "u64" },
        { name: "server", type: "address" },
      ],
    },
    {
      name: "AutocompleteGenerated",
      is_native: false,
      is_event: false,
      abilities: ["store", "key"],
      generic_type_params: [],
      fields: [{ name: "payments", type: "0x1::smart_table::SmartTable<address, bool>" }],
    },
    {
      name: "AutocompletePayment",
      is_native: false,
      is_event: true,
      abilities: ["drop", "store"],
      generic_type_params: [],
      fields: [
        { name: "account", type: "address" },
        { name: "fees", type: "u64" },
        { name: "coin_addr", type: "address" },
      ],
    },
  ],
} as const;
